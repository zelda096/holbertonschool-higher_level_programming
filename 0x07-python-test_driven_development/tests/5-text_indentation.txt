 Module ``5-text_indentation.py``
==============================

    Import module:

    >>> text_indentation = __import__('5-text_indentation').text_indentation

    long string:
  >>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc.
  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  <BLANKLINE>
  Quonam modo?
  <BLANKLINE>
  Utrum igitur tibi litteram videor an totas paginas commovere?
  <BLANKLINE>
  Non autem hoc:
  <BLANKLINE>
  igitur ne illud quidem.
  <BLANKLINE>
  Fortasse id optimum, sed ubi illud:
  <BLANKLINE>
  Plus semper voluptatis?
  <BLANKLINE>
  Teneo, inquit, finem illi videri nihil dolere.
  <BLANKLINE>
  Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
  <BLANKLINE>
  Si id dicis, vicimus.
  <BLANKLINE>
  Inde sermone vario sex illa a Dipylo stadia confecimus.
  <BLANKLINE>
  Sin aliud quid voles, postea.
  <BLANKLINE>
  Quae animi affectio suum cuique tribuens atque hanc, quam dico.
  <BLANKLINE>
  Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres.
  <BLANKLINE>

    Space newline:

    >>> text_indentation("i.      need   ~  more:    vicio")
    i.
    <BLANKLINE>
    need   ~  more:
    <BLANKLINE>
    vicio

    space in the begin:

  >>> text_indentation("     <- white people be like?")  #doctest: +REPORT_NDIFF, +NORMALIZE_WHITESPACE
  <- white people be like?

    dots:
  >>> text_indentation(".......")  #doctest: +REPORT_NDIFF
  .
  <BLANKLINE>
  .
  <BLANKLINE>
  .
  <BLANKLINE>
  .
  <BLANKLINE>
  .
  <BLANKLINE>
  .
  <BLANKLINE>
  .
  <BLANKLINE>

    Integer:

    >>> text_indentation(45)  #doctest: +REPORT_NDIFF
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    Without marks:

    >>> text_indentation("and marks boi")
    and marks boi

    Without args:

    >>> text_indentation()
    Traceback (most recent call last):
    ...
    TypeError: text_indentation() missing 1 required positional argument: 'text'

    Many args:

    >>> text_indentation("oh", "boi")
    Traceback (most recent call last):
    ...
    TypeError: text_indentation() takes 1 positional argument but 2 were given


    None:

    >>> text_indentation(None)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    bool:

    >>> text_indentation(True)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string
